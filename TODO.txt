/**
    add mapping for users
    https://ethereum.stackexchange.com/questions/45557/add-user-details-to-smart-contract

    struct User {
        uint256 id;
        bytes32 name;
        // other stuff
    
        bool set; // This boolean is used to differentiate between unset and zero struct values
    }

    create a mapping:
    mapping(address => User) public users;
    
    function createUser(address _userAddress, uint256 _userId, bytes32 _userName) public {
        User storage user = users[_userAddress];
        // Check that the user did not already exist:
        require(!user.set);
        //Store the user
        users[_userAddress] = User({
            id: _userId,
            name: _userName,
            set: true
        });
    }
    
    **********************

    Upload  a file to IPFS and saves the hash in a smart contract 
    https://github.com/luisvid/IPFS-SmartContract
    
    **********************
    Interface
    Look at:
        async addStore()        line 56 - StoreOwnerPanel.jsx
        async getAllStores()    line 77 - StoreList.jsx


     */